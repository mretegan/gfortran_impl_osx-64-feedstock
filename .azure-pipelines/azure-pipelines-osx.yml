jobs:
  - job: osx_64_cross_target_platformosx-64gfortran_version12.3.0macos_machinex86_64-apple-darwin13.4.0
    pool:
      vmImage: macOS-11
    timeoutInMinutes: 360
    steps:
      - script: |
          export CI=azure
          export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
          export remote_url=$(Build.Repository.Uri)
          export sha=$(Build.SourceVersion)
          export OSX_FORCE_SDK_DOWNLOAD="1"
          export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
          export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
          if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
            export IS_PR_BUILD="True"
          else
            export IS_PR_BUILD="False"
          fi
          ./.scripts/run_osx_build.sh
        displayName: Run OSX build
        env:
          CONFIG: osx_64_cross_target_platformosx-64gfortran_version12.3.0macos_machinex86_64-apple-darwin13.4.0
          UPLOAD_PACKAGES: "True"
          SHORT_CONFIG: osx_64_cross_target_platformosx-64g_h9275fed2f9
          BINSTAR_TOKEN: $(BINSTAR_TOKEN)
          FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
          STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
      - script: |
          export CI=azure
          export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
          export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
          export CONDA_BLD_DIR=/Users/runner/miniforge3/conda-bld
          export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
          # Archive everything in CONDA_BLD_DIR except environments
          export BLD_ARTIFACT_PREFIX=conda_artifacts
          if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
            # Archive the CONDA_BLD_DIR environments only when the job fails
            export ENV_ARTIFACT_PREFIX=conda_envs
          fi
          ./.scripts/create_conda_build_artifacts.sh
        displayName: Prepare conda build artifacts
        condition: succeededOrFailed()
      - task: PublishPipelineArtifact@1
        displayName: Store conda build artifacts
        condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
        inputs:
          targetPath: $(BLD_ARTIFACT_PATH)
          artifactName: $(BLD_ARTIFACT_NAME)
      - task: PublishPipelineArtifact@1
        displayName: Store conda build environment artifacts
        condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
        inputs:
          targetPath: $(ENV_ARTIFACT_PATH)
          artifactName: $(ENV_ARTIFACT_NAME)
